import vk_api
import telebot
import time
import json
import os

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
VK_TOKEN = "your_vk_token"  # –¢–æ–∫–µ–Ω VK
VK_GROUP_ID = "your_vk_group_id"  # ID –≥—Ä—É–ø–ø—ã –±–µ–∑ "-"
TG_BOT_TOKEN = "your_telegram_bot_token"  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram
TG_CHAT_ID = "your_telegram_chat_id"  # ID —á–∞—Ç–∞ Telegram

LOG_FILE = "log.txt"  # –§–∞–π–ª –ª–æ–≥–æ–≤
LAST_POST_FILE = "last_post.json"  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞

# –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö) ‚Äì 10-15 –º–∏–Ω—É—Ç
CHECK_INTERVAL = 10 * 60  # 10 –º–∏–Ω—É—Ç

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API
vk_session = vk_api.VkApi(token=VK_TOKEN)
vk = vk_session.get_api()
bot = telebot.TeleBot(TG_BOT_TOKEN)

def log_message(message):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥-—Ñ–∞–π–ª."""
    with open(LOG_FILE, "a", encoding="utf-8") as log_file:
        log_file.write(f"{time.strftime('%Y-%m-%d %H:%M:%S')} - {message}\n")
    print(message)

def load_last_post_id():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞."""
    if os.path.exists(LAST_POST_FILE):
        with open(LAST_POST_FILE, "r") as file:
            try:
                return json.load(file).get("last_post_id")
            except json.JSONDecodeError:
                return None
    return None

def save_last_post_id(post_id):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞."""
    with open(LAST_POST_FILE, "w") as file:
        json.dump({"last_post_id": post_id}, file)

def get_latest_post():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –∏–∑ VK, –ø—Ä–æ–ø—É—Å–∫–∞—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ."""
    try:
        posts = vk.wall.get(owner_id=-int(VK_GROUP_ID), count=5)["items"]
        for post in posts:
            if post.get("is_pinned"):  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –ø–æ—Å—Ç
                continue

            post_id = post["id"]
            text = post.get("text", "")

            # –°–æ–±–∏—Ä–∞–µ–º —Ñ–æ—Ç–æ
            photos = []
            attachments = post.get("attachments", [])
            for att in attachments:
                if att["type"] == "photo":
                    photos.append(att["photo"]["sizes"][-1]["url"])

            return post_id, text, photos
    except Exception as e:
        log_message(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞: {e}")
    return None, None, None

def send_to_telegram():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø–æ—Å—Ç –≤ Telegram."""
    last_post_id = load_last_post_id()
    post_id, text, photos = get_latest_post()

    if not post_id or post_id == last_post_id:
        log_message("–ù–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –Ω–µ—Ç.")
        return

    try:
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if text:
            bot.send_message(TG_CHAT_ID, text)
            log_message("‚úÖ –¢–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")

        # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if photos:
            media_group = [telebot.types.InputMediaPhoto(photo) for photo in photos]
            bot.send_media_group(TG_CHAT_ID, media_group)
            log_message("‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")

        log_message(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å—Ç {post_id}")
        save_last_post_id(post_id)
    except Exception as e:
        log_message(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

if __name__ == "__main__":
    log_message("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    while True:
        send_to_telegram()
        log_message(f"‚åõ –û–∂–∏–¥–∞–Ω–∏–µ {CHECK_INTERVAL // 60} –º–∏–Ω—É—Ç...")
        time.sleep(CHECK_INTERVAL)